#!/bin/bash 



function crl(){
	echo "rapide"
	curl -s "https://rapiddns.io/subdomain/$1?full=1#result" | grep "<td><a" | cut -d '"' -f 2 | grep http | cut -d '/' -f3 | sed 's/#results//g' | sort -u >> Domains
	echo "threatcrowd"
	curl --silent "https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$1" |jq -r .subdomains[] |sort -u >>  Domains
	echo "bufferover"
	curl -s  "https://dns.bufferover.run/dns?q=.$1" |jq -r .FDNS_A[]|cut -d',' -f2|sort -u >> Domains
	echo "riddle"
	curl -s "https://riddler.io/search/exportcsv?q=pld:$1" | grep -Po "(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | sort -u >> Domains
	echo "virustotal"
	curl -s "https://www.virustotal.com/ui/domains/$1/subdomains?limit=400" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | sort -u >> Domains
	echo "certspoter"
	curl -s "https://certspotter.com/api/v0/certs?domain=$1" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | sort -u >> Domains
	echo "archive"
	curl -s "http://web.archive.org/cdx/search/cdx?url=*.$1/*&output=text&fl=original&collapse=urlkey" | sed -e 's_https*://__' -e "s/\/.*//" | sort -u >> Domains
	echo "jldc"
	curl -s "https://jldc.me/anubis/subdomains/$1" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | sort -u >> Domains
	echo "secutrails"
	curl -s "https://securitytrails.com/list/apex_domain/$1" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | grep ".$1" | sort -u >> Domains
	echo "crt"
	curl -s "https://crt.sh/?q=%25.$1&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u >> Domains
	echo "recon"
	curl "https://recon.dev/api/search?key=apikey&domain=$1" |jq -r '.[].rawDomains[]' | sed 's/ //g' | sort -u >> Domains
	echo "sonar"
	curl --silent "https://sonar.omnisint.io/subdomains/$1" |grep -oE "[a-zA-Z0-9._-]+\.$1" | sort -u >> Domains
	echo "synapsint"
	curl --silent  -X POST "https://synapsint.com/report.php" -d "name=https%3A%2F%2F$1"  |grep -oE "[a-zA-Z0-9._-]+\.$1"  | sort -u >> Domains
}

mkdir -p $1_program
cd ./$1_program
mv ../$1 ./scope
if [ -f scope ];then
	assetfinder -subs-only {}|tee -a Domains 
	subfinder -dL ./scope -all -t 500 |tee -a Domains
	for i in $(cat ./scope);do
		~/my_scripts/asset $i 
		~/my_scripts/git_domains -d $i -t $github_api |tee -a Domains
        done
	cat Domains|grep ".$i" | sort -u -o Domains
	cat Domains | httpx -threads 500 |tee -a Hosts 
	cat Hosts   |sort -u -o Hosts
		
fi
 xargs -a Hosts -I@ sh -c 'echo @'|dnsgen -|httpx -threads 1000 -silent |tee -a Hosts2
 cat Hosts Hosts2 |sort -uo Hosts 
 rm -rf Hosts2
